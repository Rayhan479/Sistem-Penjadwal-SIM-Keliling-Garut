// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Faq {
  id        Int      @id @default(autoincrement())
  question  String
  answer    String
  category  String   @default("Umum")
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model ContactInfo {
  id        Int      @id @default(autoincrement())
  phone     String
  email     String
  whatsapp  String
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Pengumuman {
  id        Int      @id @default(autoincrement())
  judul     String
  tanggal   DateTime
  gambar    String?
  isi       String
  category  String   @default("Pengumuman")
  views     Int      @default(0)
  authorId  Int?
  author    User?    @relation(fields: [authorId], references: [id], onDelete: SetNull)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Laporan {
  id        Int      @id @default(autoincrement())
  tanggal   DateTime
  lokasi    String
  jumlah    Int
  status    String   @default("selesai")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Jadwal {
  id           Int      @id @default(autoincrement())
  judul        String
  tanggal      DateTime
  lokasi       String
  alamatLengkap String?
  latitude     Float?
  longitude    Float?
  gambar       String?
  waktuMulai   String
  waktuSelesai String
  jumlahKuota  Int      @default(100)  
  status       String   @default("terjadwal")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("jadwal")
}

model Fees {
  id        Int      @id @default(1)
  simA      Int      @default(120000)
  simB1     Int      @default(250000)
  simB2     Int      @default(250000)
  simC      Int      @default(200000)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("fees")
}

model User {
  id          Int          @id @default(autoincrement())
  username    String       @unique
  email       String       @unique
  password    String
  name        String
  role        String       @default("admin") // "super_admin" or "admin"
  isActive    Boolean      @default(true)
  pengumuman  Pengumuman[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@map("users")
}

model PasswordReset {
  id        Int      @id @default(autoincrement())
  email     String
  otp       String
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())

  @@map("password_resets")
}

